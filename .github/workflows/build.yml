name: Build
run-name: Build (${{ inputs.target }}, ${{ inputs.version }})

on:
  workflow_dispatch:
    inputs:
      target:
        type: string
        required: true
      version:
        type: string
        required: true
      push:
        type: boolean
        required: false
        default: false
  workflow_call:
    inputs:
      target:
        type: string
        required: true
      version:
        type: string
        required: true
      push:
        type: boolean
        required: false
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.target }}-${{ inputs.version }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - run: sleep 10

  build:
    runs-on: ubuntu-latest
    needs:
      - prepare
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v5

      - name: Generate GitHub metadata
        id: github-meta
        uses: dockerbakery/github-metadata-action@v3

      - if: inputs.push
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/bake-action@v6
        env:
          CONSUL_VERSIONS: ${{ inputs.version }}
          VAULT_VERSIONS: ${{ inputs.version }}
          OPENBAO_VERSIONS: ${{ inputs.version }}
        with:
          targets: ${{ inputs.target }}
          push: ${{ inputs.push }}
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.docker-meta.outputs.bake-file-labels }}
            cwd://${{ steps.docker-meta.outputs.bake-file-annotations }}
            cwd://${{ steps.github-meta.outputs.bake-file }}
          set: |
            *.cache-from=type=gha
            ${{ inputs.push && '*.cache-to=type=gha,mode=max' || ''}}
